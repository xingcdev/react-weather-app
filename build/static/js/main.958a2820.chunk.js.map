{"version":3,"sources":["components/Card/Card.js","components/ScrollableContainer/ScrollableContainer.tsx","assets/WeatherIcons/sun.png","assets/WeatherIcons/moon.png","assets/WeatherIcons/dayCloudy.png","assets/WeatherIcons/nightCloudy.png","assets/WeatherIcons/cloud.png","assets/WeatherIcons/showerRain.png","assets/WeatherIcons/dayRain.png","assets/WeatherIcons/nightRain.png","assets/WeatherIcons/thunderstorm.png","assets/WeatherIcons/snow.png","components/WeatherIcon/WeatherIcon.tsx","views/Home/HourlyForecast/HourlyForecast.tsx","views/Home/WeatherHeader/WeatherHeader.tsx","api/openweather/useWeatherData.tsx","views/Home/HomePage/HomePage.tsx","utils/helpers/number.helper.tsx","views/Details/DailyForecast/DailyForecast.tsx","views/Details/DetailsPage/DetailsPage.tsx","App.tsx","utils/helpers/useWindowWidth.helper.tsx","index.js"],"names":["Card","children","class","ScrollableContainer","props","slidesPerView","freeMode","touchMoveStopPropagation","style","width","WeatherIcon","name","size","color","is3D","src","sun","alt","moon","dayCloudy","nightCloudy","cloud","showerRain","dayRain","nightRain","thunderstorm","snow","CustomLabel","x","y","index","data","transform","iconSize","icon","fontSize","textAnchor","temperature","dy","fill","hour","convertToReadableHour","timestamp","dayjs","format","HourlyForecast","chartData","slice","gap","hourlyWeather","length","currentWeather","object","dt","temp","weather","push","computeHourlyForecast","LineChart","height","margin","top","right","left","bottom","Line","type","dataKey","dot","stroke","strokeWidth","isAnimationActive","label","YAxis","hide","allowDataOverflow","domain","WeatherHeader","className","city","description","useWeatherData","dataType","apiUrl","process","useState","weatherData","setWeatherData","useEffect","a","fetch","then","res","json","result","fetchData","HomePage","backgroundColor","setBackgroundColor","console","log","weatherId","colorCode","changeBackgroundColor","current","id","timezone","hourly","removeDecimal","number","Math","floor","DailyForecast","forecastData","map","singleDay","time","dayTemp","day","nightTemp","night","unix","DetailsPage","daily","App","isMobile","changeWindowWidth","setWidth","window","innerWidth","addEventListener","removeEventListener","useWindowWidth","spaceBetween","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.958a2820.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = function ({ children }) {\n\treturn (\n\t\t<div class=\"bg-white bg-opacity-25 backdrop-filter backdrop-blur-2xl rounded-2xl mx-3 pt-3 pl-3 pb-3\">\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import { Swiper, SwiperSlide } from 'swiper/react';\n\nexport default function ScrollableContainer(props) {\n\treturn (\n\t\t<Swiper\n\t\t\tslidesPerView={'auto'}\n\t\t\tfreeMode={true}\n\t\t\t// Prevent the whole page to be swiped\n\t\t\ttouchMoveStopPropagation={true}\n\t\t>\n\t\t\t{/* The width is the chart's */}\n\t\t\t<SwiperSlide style={{ width: '1200px' }}>{props.children}</SwiperSlide>\n\t\t</Swiper>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/sun.9668469a.png\";","export default __webpack_public_path__ + \"static/media/moon.4627f65b.png\";","export default __webpack_public_path__ + \"static/media/dayCloudy.94bb0050.png\";","export default __webpack_public_path__ + \"static/media/nightCloudy.06c991ac.png\";","export default __webpack_public_path__ + \"static/media/cloud.1c4c075f.png\";","export default __webpack_public_path__ + \"static/media/showerRain.95dbad4e.png\";","export default __webpack_public_path__ + \"static/media/dayRain.41ca21b0.png\";","export default __webpack_public_path__ + \"static/media/nightRain.45195bcf.png\";","export default __webpack_public_path__ + \"static/media/thunderstorm.a366977d.png\";","export default __webpack_public_path__ + \"static/media/snow.9183a0c4.png\";","import {\n\tWiDaySunny,\n\tWiMoonFull,\n\tWiDayCloudy,\n\tWiNightCloudy,\n\tWiCloud,\n\tWiCloudy,\n\tWiRainWind,\n\tWiDayRainMix,\n\tWiNightRainMix,\n\tWiThunderstorm,\n\tWiSnowflakeCold,\n\tWiFog,\n} from 'weather-icons-react';\n\nimport sun from '../../assets/WeatherIcons/sun.png';\nimport moon from '../../assets/WeatherIcons/moon.png';\nimport dayCloudy from '../../assets/WeatherIcons/dayCloudy.png';\nimport nightCloudy from '../../assets/WeatherIcons/nightCloudy.png';\nimport cloud from '../../assets/WeatherIcons/cloud.png';\nimport showerRain from '../../assets/WeatherIcons/showerRain.png';\nimport dayRain from '../../assets/WeatherIcons/dayRain.png';\nimport nightRain from '../../assets/WeatherIcons/nightRain.png';\nimport thunderstorm from '../../assets/WeatherIcons/thunderstorm.png';\nimport snow from '../../assets/WeatherIcons/snow.png';\n\ntype Props = {\n\tname: string;\n\tsize: number;\n\tcolor?: string;\n\tis3D?: boolean;\n};\n\nexport default function WeatherIcon({ name, size, color, is3D }: Props) {\n\tswitch (name) {\n\t\tcase '01d':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={sun} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiDaySunny size={size} color={color} />\n\t\t\t);\n\n\t\tcase '01n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={moon} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiMoonFull size={size} color={color} />\n\t\t\t);\n\n\t\tcase '02d':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={dayCloudy} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiDayCloudy size={size} color={color} />\n\t\t\t);\n\n\t\tcase '02n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={nightCloudy} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiNightCloudy size={size} color={color} />\n\t\t\t);\n\n\t\tcase '03d':\n\t\tcase '03n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={cloud} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiCloud size={size} color={color} />\n\t\t\t);\n\n\t\tcase '04d':\n\t\tcase '04n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={cloud} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiCloudy size={size} color={color} />\n\t\t\t);\n\t\tcase '09d':\n\t\tcase '09n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={showerRain} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiRainWind size={size} color={color} />\n\t\t\t);\n\t\tcase '10d':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={dayRain} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiDayRainMix size={size} color={color} />\n\t\t\t);\n\n\t\tcase '10n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={nightRain} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiNightRainMix size={size} color={color} />\n\t\t\t);\n\t\tcase '11d':\n\t\tcase '11n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={thunderstorm} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiThunderstorm size={size} color={color} />\n\t\t\t);\n\t\tcase '13d':\n\t\tcase '13n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={snow} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiSnowflakeCold size={size} color={color} />\n\t\t\t);\n\t\tcase '50d':\n\t\tcase '50n':\n\t\t\treturn is3D ? (\n\t\t\t\t<img src={cloud} alt=\"3D icon\" width={size} />\n\t\t\t) : (\n\t\t\t\t<WiFog size={size} color={color} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n","import React from 'react';\nimport Card from '../../../components/Card/Card';\nimport ScrollableContainer from '../../../components/ScrollableContainer/ScrollableContainer';\nimport { LineChart, Line, YAxis } from 'recharts';\nimport dayjs from 'dayjs';\nimport WeatherIcon from '../../../components/WeatherIcon/WeatherIcon';\n\ninterface ChartData {\n\thour: string;\n\ttemperature: number;\n\ticon: string;\n}\n\nfunction CustomLabel(props) {\n\tconst { x, y, index, data } = props;\n\tconst iconSize = 32;\n\treturn (\n\t\t<svg>\n\t\t\t<g transform={`translate(${x - iconSize / 2},${y - 65})`}>\n\t\t\t\t<WeatherIcon name={data[index].icon} size={iconSize} color=\"#333\" />\n\t\t\t</g>\n\t\t\t<g transform={`translate(${x},${y - 15})`}>\n\t\t\t\t<text fontSize={15} textAnchor=\"middle\">\n\t\t\t\t\t{data[index].temperature}\n\t\t\t\t</text>\n\t\t\t\t<text dy={40} fill=\"#6B7280\" fontSize={12} textAnchor=\"middle\">\n\t\t\t\t\t{data[index].hour}\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n\ntype Props = {\n\tdata: any[];\n};\n\nconst HourlyForecast = function (props: Props) {\n\tlet chartData: ChartData[] = convertTo24Hours(props.data);\n\tchartData = computeHourlyForecast(chartData, 2);\n\n\treturn (\n\t\t<Card>\n\t\t\t<h2>Today</h2>\n\t\t\t<ScrollableContainer>\n\t\t\t\t<LineChart\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\twidth={1200}\n\t\t\t\t\theight={143}\n\t\t\t\t\tmargin={{ top: 70, right: 23, left: 20, bottom: 0 }}\n\t\t\t\t>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"linear\"\n\t\t\t\t\t\tdataKey=\"temperature\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstroke=\"#333\"\n\t\t\t\t\t\tstrokeWidth={1}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\t/* @ts-ignore The typings are incorrect */\n\t\t\t\t\t\tlabel={<CustomLabel data={chartData} />}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* dataMin - 5 will NOT hide the hours below the line */}\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\thide={true}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tallowDataOverflow={true}\n\t\t\t\t\t\tdomain={['dataMin - 5', 'dataMax']}\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</ScrollableContainer>\n\t\t</Card>\n\t);\n};\n\nconst convertToReadableHour = function (timestamp: any) {\n\t/* JavaScript works in milliseconds, multiplied by 1000 so that the argument is in milliseconds, not seconds. */\n\treturn dayjs(timestamp * 1000).format('h A');\n};\n\n// The default hourly data contains 48 elements.\nfunction convertTo24Hours(data: any[]) {\n\treturn data.slice(0, 24);\n}\n\nfunction computeHourlyForecast(data: any[], gap: number) {\n\tlet hourlyWeather: ChartData[] = [];\n\n\tfor (let index = 0; index < data.length; index += gap) {\n\t\tconst currentWeather = data[index];\n\n\t\tconst object = {\n\t\t\thour: convertToReadableHour(currentWeather.dt),\n\t\t\ttemperature: currentWeather.temp,\n\t\t\ticon: currentWeather.weather[0].icon,\n\t\t};\n\n\t\thourlyWeather.push(object);\n\t}\n\treturn hourlyWeather;\n}\n\nexport default HourlyForecast;\n","import { AnyMxRecord } from 'node:dns';\nimport WeatherIcon from '../../../components/WeatherIcon/WeatherIcon';\n\ntype Props = {\n\tcity: string;\n\tdata: { [key: string]: any };\n};\n\nfunction WeatherHeader(props: Props) {\n\treturn (\n\t\t<div className=\"p-3\">\n\t\t\t<h1 className=\"text-left\">{props.city}</h1>\n\t\t\t<main className=\"p-4 flex flex-col justify-center items-center p-12\">\n\t\t\t\t<WeatherIcon name={props.data.weather[0].icon} size={220} is3D={true} />\n\t\t\t\t<p className=\"text-6xl lg:text-3xl text-gray-800\">\n\t\t\t\t\t{props.data.temp}&deg;\n\t\t\t\t</p>\n\t\t\t\t<p className=\"\">{props.data.weather[0].description}</p>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default WeatherHeader;\n","import React, { useEffect, useState } from 'react';\n\nfunction useWeatherData(dataType?: string) {\n\tlet apiUrl = `${process.env.REACT_APP_WEATHER_API_URL}onecall?lat=48.856614&lon=2.3522219&units=metric&&exclude=minutely,daily,alerts&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n\tif (dataType === 'daily') {\n\t\tapiUrl = `${process.env.REACT_APP_WEATHER_API_URL}onecall?lat=48.856614&lon=2.3522219&units=metric&&exclude=current,minutely,hourly,alerts&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n\t}\n\n\tconst [weatherData, setWeatherData] = useState(null);\n\tuseEffect(() => {\n\t\tconst fetchData = async function () {\n\t\t\tawait fetch(apiUrl)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetWeatherData(result);\n\t\t\t\t});\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn weatherData;\n}\n\nexport default useWeatherData;\n","import React, { useEffect, useState } from 'react';\nimport HourlyForecast from '../HourlyForecast/HourlyForecast';\nimport WeatherHeader from '../WeatherHeader/WeatherHeader';\nimport useWeatherData from '../../../api/openweather/useWeatherData';\n\ninterface WeatherData {\n\ttimezone: string;\n\tcurrent: {\n\t\tweather: [{ id: number }];\n\t};\n\thourly: { [key: string]: any }[];\n}\n\nfunction HomePage() {\n\tconst [backgroundColor, setBackgroundColor] = useState(null);\n\n\tconst weatherData: WeatherData = useWeatherData();\n\tconsole.log(weatherData);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsetBackgroundColor(\n\t\t\t\tchangeBackgroundColor(\n\t\t\t\t\tweatherData ? weatherData.current.weather[0].id : 0\n\t\t\t\t)\n\t\t\t),\n\t\t[]\n\t);\n\tif (!weatherData) return <p>Loading...</p>;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${backgroundColor} lg:rounded-lg lg:shadow-md lg:col-start-4 lg:col-end-7 lg:row-span-2 pb-4`}\n\t\t>\n\t\t\t<WeatherHeader city={weatherData.timezone} data={weatherData.current} />\n\t\t\t<HourlyForecast data={weatherData.hourly} />\n\t\t</div>\n\t);\n}\n\nfunction changeBackgroundColor(weatherId: number) {\n\tlet colorCode: string = '#fefefe';\n\tif (weatherId <= 299) {\n\t\tcolorCode = 'bg-gradient-to-b from-gray-200 to-gray-400';\n\t} else if (weatherId <= 399) {\n\t\tcolorCode = 'bg-gradient-to-b from-gray-200 to-blue-200';\n\t} else if (weatherId <= 599) {\n\t\tcolorCode = 'bg-gradient-to-b from-gray-200 to-blue-200';\n\t} else if (weatherId <= 699) {\n\t\tcolorCode = 'bg-gradient-to-b from-white to-gray-100';\n\t} else if (weatherId <= 799) {\n\t\tcolorCode = 'bg-gradient-to-b from-gray-200 to-yellow-700';\n\t} else if (weatherId <= 800) {\n\t\tcolorCode = 'bg-gradient-to-b from-blue-100 to-blue-400';\n\t} else {\n\t\tcolorCode = 'bg-gradient-to-b from-gray-50 to-blue-100';\n\t}\n\treturn colorCode;\n}\n\nexport default HomePage;\n","export function removeDecimal(number: number): number {\n\treturn Math.floor(number);\n}\n","import dayjs from 'dayjs';\nimport WeatherIcon from '../../../components/WeatherIcon/WeatherIcon';\nimport { removeDecimal } from '../../../utils/helpers/number.helper';\n\ninterface ForecastData {\n\ttime: number;\n\tdayTemp: number;\n\tnightTemp: number;\n\tdescription: string;\n\ticon: string;\n}\n\nfunction extractForecastData(data: { [key: string]: any }[]): ForecastData[] {\n\tconst result: ForecastData[] = data.map((singleDay) => {\n\t\treturn {\n\t\t\ttime: singleDay.dt,\n\t\t\tdayTemp: removeDecimal(singleDay.temp.day),\n\t\t\tnightTemp: removeDecimal(singleDay.temp.night),\n\t\t\tdescription: singleDay.weather[0].description,\n\t\t\ticon: singleDay.weather[0].icon,\n\t\t};\n\t});\n\treturn result;\n}\n\ntype Props = {\n\tdata: { [key: string]: any }[];\n};\n\nconst DailyForecast = function (props: Props) {\n\tconst forecastData: ForecastData[] = extractForecastData(props.data);\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>This week</h2>\n\t\t\t<ul className=\"space-y-4 lg:space-y-2\">\n\t\t\t\t{forecastData.map((singleDay, index) => (\n\t\t\t\t\t<li key={index} className=\"flex justify-center items-center\">\n\t\t\t\t\t\t<section className=\"flex-1\">\n\t\t\t\t\t\t\t<p className=\"font-bold\">\n\t\t\t\t\t\t\t\t{index === 0 ? 'Now' : dayjs.unix(singleDay.time).format('ddd')}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section className=\"flex-1 mr-6\">\n\t\t\t\t\t\t\t<span className=\"mr-5 text-black font-bold\">\n\t\t\t\t\t\t\t\t{singleDay.dayTemp}&deg;\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"font-bold\">{singleDay.nightTemp}&deg;</span>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section className=\"flex-2 text-sm\">\n\t\t\t\t\t\t\t<span className=\"mr-2 font-bold\">\n\t\t\t\t\t\t\t\t{<WeatherIcon name={singleDay.icon} size={32} color=\"#333\" />}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<span className=\"text-gray-700\">{singleDay.description}</span>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default DailyForecast;\n","import React from 'react';\nimport DailyForecast from '../DailyForecast/DailyForecast';\nimport useWeatherData from '../../../api/openweather/useWeatherData';\n\ninterface WeatherData {\n\tlat: number;\n\tlon: number;\n\ttimezone: string;\n\ttimezone_offset: number;\n\tdaily: { [key: string]: any }[];\n}\n\nexport default function DetailsPage() {\n\tconst weatherData: WeatherData = useWeatherData('daily');\n\tconsole.log(weatherData);\n\n\tif (!weatherData) return <p>Loading...</p>;\n\n\treturn (\n\t\t<div className=\"p-4 lg:rounded-lg lg:shadow-md lg:col-start-8 lg:col-end-12\">\n\t\t\t<DailyForecast data={weatherData.daily} />\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport HomePage from './views/Home/HomePage/HomePage';\nimport DetailsPage from './views/Details/DetailsPage/DetailsPage';\nimport useWindowWidth from './utils/helpers/useWindowWidth.helper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.min.css';\nimport '@fontsource/merriweather-sans/300.css';\n\nfunction App() {\n\tconst isMobile = useWindowWidth() <= 1024;\n\n\treturn (\n\t\t<div className=\"App text-lg lg:text-sm font-sans text-gray-500\">\n\t\t\t{isMobile ? (\n\t\t\t\t<Swiper spaceBetween={50} slidesPerView={1}>\n\t\t\t\t\t<SwiperSlide>\n\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>\n\t\t\t\t\t\t<DetailsPage />\n\t\t\t\t\t</SwiperSlide>\n\t\t\t\t</Swiper>\n\t\t\t) : (\n\t\t\t\t<div className=\"pt-4 grid grid-cols-12\">\n\t\t\t\t\t<HomePage />\n\t\t\t\t\t<DetailsPage />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\n\nexport default function useWindowWidth(): number {\n\t// if (typeof window !== 'undefined') {\n\t// \treturn 1200;\n\t// }\n\n\tfunction changeWindowWidth(): void {\n\t\tsetWidth(window.innerWidth);\n\t}\n\n\tconst [width, setWidth] = useState(window.innerWidth);\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', changeWindowWidth);\n\n\t\treturn () => window.removeEventListener('resize', changeWindowWidth);\n\t}, []);\n\n\treturn width;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}